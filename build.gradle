// Gradle build script for the Wes project

plugins {
    id 'base' // to add a "clean" task to the root project
}

subprojects {
    apply from: rootProject.file('common.gradle')
}

ext {
    jmeTarget = '' // distinguish non-JME libraries built for specific JME releases

    // module coordinates of external dependencies:
    heartCoordinates = 'com.github.stephengold:Heart:8.3.2' + jmeTarget

    // current versions of libraries:
    jme3Version = '3.6.0-stable'
    wesVersion = '0.7.6' + jmeTarget + '-SNAPSHOT'
}

tasks.withType(JavaCompile) { // Java compile-time options:
    options.compilerArgs << '-Xdiags:verbose'
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_14)) {
        // Suppress warnings that source value 7 is obsolete.
        options.compilerArgs << '-Xlint:-options'
    }
    options.compilerArgs << '-Xlint:unchecked'
    //options.deprecation = true // to provide detailed deprecation warnings
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_1_10)) {
        options.release = 8
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds' // to disable caching of SNAPSHOTs
}

tasks.register('checkstyle') {
    dependsOn ':WesExamples:checkstyleMain', ':WesLibrary:checkstyleMain'
    description 'Checks the style of all Java sourcecode.'
}

tasks.register('AppChooser') {
    dependsOn ':WesExamples:AppChooser'
    description 'Runs the examples.'
}

// publishing tasks:

tasks.register('install') {
    dependsOn ':WesLibrary:install'
    description 'Installs Maven artifacts to the local repository.'
}
tasks.register('release') {
    dependsOn ':WesLibrary:release'
    description 'Stages Maven artifacts to Sonatype OSSRH.'
}
